{"version":3,"sources":["components/FeaturePreview/FeaturePreview.tsx","components/Link/Link.tsx","components/DownloadApp/DownloadApp.tsx","helpers/index.ts","images/colorful-circle.png","components/Footer/Footer.tsx","components/Header/Header.tsx","components/Main/Main.tsx","pages/Landing.tsx","pages/Inner.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BREATHING_STATES","Link","children","to","className","DownloadApp","rad","deg","Math","PI","FeaturePreview","useState","frame","setFrame","startTime","useRef","then","fpsInterval","globalFrame","requestAnimationFrameID","scale","state","inhail","animate","nextScale","cos","current","exhail","loop","timestamp","requestAnimationFrame","elapsed","floor","useEffect","performance","now","cancelAnimationFrame","style","width","transform","src","circleImg","alt","Footer","Header","Main","Landing","Inner","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1f845dd.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from 'react'\r\n\r\nimport { rad } from 'helpers'\r\n\r\nimport circleImg from '../../images/colorful-circle.png'\r\nimport './styles.scss'\r\n\r\nenum BREATHING_STATES {\r\n\tinhail = 'Inhail',\r\n\texhail = 'Exhail',\r\n}\r\n\r\nexport const FeaturePreview = () => {\r\n\tconst [frame, setFrame] = useState(0)\r\n\r\n\tconst startTime = useRef(0)\r\n\tconst then = useRef(0)\r\n\tconst fpsInterval = useRef(0)\r\n\tconst globalFrame = useRef(0)\r\n\tconst requestAnimationFrameID = useRef(0)\r\n\r\n\tconst scale = useRef(1)\r\n\tconst state = useRef(BREATHING_STATES.inhail)\r\n\r\n\tconst animate = () => {\r\n\t\tconst nextScale = Math.cos(rad(globalFrame.current)) / 3 + 2 / 3\r\n\r\n\t\tstate.current = nextScale > scale.current ? BREATHING_STATES.inhail : BREATHING_STATES.exhail\r\n\t\tscale.current = nextScale\r\n\r\n\t\tsetFrame(globalFrame.current)\r\n\t}\r\n\r\n\tconst loop = (timestamp: DOMHighResTimeStamp = 0) => {\r\n\t\trequestAnimationFrameID.current = requestAnimationFrame(loop)\r\n\r\n\t\tconst elapsed = timestamp - then.current\r\n\r\n\t\tif (elapsed > fpsInterval.current) {\r\n\t\t\tthen.current = timestamp - (elapsed % fpsInterval.current)\r\n\t\t\tglobalFrame.current = Math.floor((timestamp - startTime.current) / fpsInterval.current)\r\n\r\n\t\t\tanimate()\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfpsInterval.current = 1e3 / 60\r\n\t\tstartTime.current = performance.now()\r\n\t\tthen.current = startTime.current\r\n\r\n\t\tloop()\r\n\r\n\t\treturn () => cancelAnimationFrame(requestAnimationFrameID.current)\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className=\"feature-preview\">\r\n\t\t\t<div className=\"feature-preview__state-container\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"feature-preview__state-background\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: `${100 * (Math.cos(rad(globalFrame.current)) / 2 + 0.5)}%`,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"feature-preview__state\">\r\n\t\t\t\t\t<span>{state.current}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"feature-preview__image-container\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName=\"feature-preview__image\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\ttransform: `scale(${scale.current}) rotate(${frame % 360}deg)`,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tsrc={circleImg}\r\n\t\t\t\t\talt=\"breathing-circle\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { Link as ReactRouterLink, LinkProps } from 'react-router-dom'\r\n\r\nimport './styles.scss'\r\n\r\nexport interface ILinkProps {\r\n\tchildren: React.ReactNode\r\n\tto: LinkProps['to']\r\n}\r\n\r\nexport const Link: React.FC<ILinkProps> = ({ children, to }) => (\r\n\t<ReactRouterLink className=\"btn\" to={to}>\r\n\t\t{children}\r\n\t</ReactRouterLink>\r\n)\r\n","import { Link } from 'components/Link'\r\n\r\nexport const DownloadApp = () => (\r\n\t<section className=\"download-app-section section\">\r\n\t\t<h2>Download the app:</h2>\r\n\t\t<Link to=\"/\">iStore</Link>\r\n\t</section>\r\n)\r\n","export const rad = (deg: number) => (deg * Math.PI) / 180\r\nexport const deg = (rad: number) => (rad * 180) / Math.PI\r\n","export default __webpack_public_path__ + \"static/media/colorful-circle.0c921f9d.png\";","import './styles.scss'\r\n\r\nexport const Footer = () => (\r\n\t<footer className=\"footer\">\r\n\t\t<p>Â© Copyright 2020 by A&Y. All rights reversed.</p>\r\n\t</footer>\r\n)\r\n","import './styles.scss'\r\n\r\nexport const Header = () => (\r\n\t<header className=\"header\">\r\n\t\t<h1>Train to relax correctly! Breathe right!</h1>\r\n\t</header>\r\n)\r\n","import './styles.scss'\r\n\r\nexport interface IMainProps {\r\n\tchildren: React.ReactNode\r\n}\r\n\r\nexport const Main: React.FC<IMainProps> = ({ children }) => <main className=\"main\">{children}</main>\r\n","import { DownloadApp, Link, Footer, Header, Main } from 'components'\r\n\r\nexport const Landing = () => (\r\n\t<>\r\n\t\t<Header />\r\n\t\t<Main>\r\n\t\t\t<section className=\"start-section section\">\r\n\t\t\t\t<h2>If you want then press to</h2>\r\n\t\t\t\t<Link to=\"/inner\">Start!</Link>\r\n\t\t\t</section>\r\n\t\t\t<DownloadApp />\r\n\t\t</Main>\r\n\t\t<Footer />\r\n\t</>\r\n)\r\n","import { DownloadApp, FeaturePreview, Footer, Header, Main } from 'components'\r\n\r\nexport const Inner = () => (\r\n\t<>\r\n\t\t<Header />\r\n\t\t<Main>\r\n\t\t\t<FeaturePreview />\r\n\t\t\t<DownloadApp />\r\n\t\t</Main>\r\n\t\t<Footer />\r\n\t</>\r\n)\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport { Landing, Inner } from './pages'\n\nexport const App = () => (\n\t<Router>\n\t\t<Switch>\n\t\t\t<Route path=\"/inner\">\n\t\t\t\t<Inner />\n\t\t\t</Route>\n\t\t\t<Route path=\"/\">\n\t\t\t\t<Landing />\n\t\t\t</Route>\n\t\t</Switch>\n\t</Router>\n)\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}